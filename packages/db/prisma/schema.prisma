// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model Posts {
  id              String   @id @default(cuid())
  post_link       String   @unique
  caption         String
  slides          String[]
  post_created_at DateTime
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@index([id, post_link])
}

model Otp {
  id       String   @id @default(cuid())
  email    String
  otp      String
  order_id String   @default("")
  expires  DateTime
}

model Users {
  id                 String   @id @default(uuid()) /// @zod.uuid()
  name               String
  email              String   @unique
  house_number       String
  pincode            String /// @zod.max(6).min(6)
  landmark           String?
  locality           String
  instagram_username String
  city               String
  state              String
  country            String
  phone_no           String /// @zod.max(10).min(10)
  orders             Orders[]
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  @@index([id])
}

model Orders {
  id                  String   @id @default(uuid()) /// @zod.uuid()
  instagram_post_urls String[] @unique
  user                Users?   @relation(fields: [user_id], references: [id])
  user_id             String?
  price               Int      @default(0)
  status              Status   @default(PENDING)
  courier             COURIER  @default(DEFAULT)
  images              String[]
  awb                 String?
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  length              String?  @default("0")
  breadth             String?  @default("0")
  height              String?  @default("0")
  weight              String?  @default("0")

  @@index([user_id, id])
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}

enum Status {
  PENDING
  ACCEPTED
  SHIPPED
  DELIVERED
  CANCELLED
  MANIFESTED
  OUT_FOR_DELIVERY
  HOLD
  RTO
}

enum COURIER {
  DEFAULT
  INDIA_POST
  ECOM_EXPRESS
  XPRESSBEES
  DELHIVERY
  DTDC
  OTHER
}

generator zod {
  provider = "zod-prisma"
  output   = "./zod" // (default) the directory where generated zod schemas will be saved

  relationModel = true // (default) Create and export both plain and related models.
  // relationModel         = "default" // Do not export model without relations.
  // relationModel         = false // Do not generate related model

  modelCase = "PascalCase" // (default) Output models using pascal case (ex. UserModel, PostModel)
  // modelCase             = "camelCase" // Output models using camel case (ex. userModel, postModel)

  modelSuffix = "Model" // (default) Suffix to apply to your prisma models when naming Zod schemas

  // useDecimalJs          = false // (default) represent the prisma Decimal type using as a JS number
  useDecimalJs = true // represent the prisma Decimal type using Decimal.js (as Prisma does)

  // https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
  prismaJsonNullability = true // (default) uses prisma's scheme for JSON field nullability
  // prismaJsonNullability = false // allows null assignment to optional JSON fields
}
